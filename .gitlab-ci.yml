stages:
  - static_analysis
  - test
  - test_edge
  - build
  - upload
  - release

image: registry.gitlab.com/gui-don/moustache-ci-docker:7.4

cache:
  paths:
    - vendor/

variables:
  SYMFONY_ENV: 'test'
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/"

include:
  - project: 'gitlab-org/gitlab'
    ref: master
    file: '/lib/gitlab/ci/templates/Security/Dependency-Scanning.gitlab-ci.yml'

# Static analysis

.sa_template:
  stage: static_analysis
  before_script:
    - composer install -o --no-interaction

code_style:
  extends: .sa_template
  script:
    - vendor/bin/php-cs-fixer fix --allow-risky yes --dry-run .

sast:
  extends: .sa_template
  artifacts:
    reports:
      sast: gl-sast-report.json
  script:
    - chmod +x ./vendor/pheromone/phpcs-security-audit/symlink.sh
    - vendor/pheromone/phpcs-security-audit/symlink.sh
    - vendor/bin/phpcs --error-severity=1 --warning-severity=6 --report=json --report-file=gl-sast-report.json --standard=./vendor/pheromone/phpcs-security-audit/example_base_ruleset.xml --extensions=php,inc,lib,module,info src

composer:
  extends: .sa_template
  script:
    - composer validate

stan:
  extends: .sa_template
  script:
    - vendor/bin/phpstan analyse src --level 6

# Unit Tests

.unit_template:
  stage: test
  script:
    - vendor/bin/phpunit
  before_script:
    - composer install -o --no-interaction

unit:7.3:
  extends: .unit_template
  image: registry.gitlab.com/gui-don/moustache-ci-docker:7.3

unit:7.4:
  extends: .unit_template
  image: registry.gitlab.com/gui-don/moustache-ci-docker:7.4

unit:8.0:
  extends: .unit_template
  image: registry.gitlab.com/gui-don/moustache-ci-docker:8.0

unit:coverage:
  stage: test
  image: registry.gitlab.com/gui-don/moustache-ci-docker:coverage
  allow_failure: true
  script: vendor/bin/phpunit --coverage-text --coverage-html build/coverage-report --colors=never
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  variables:
    - XDEBUG_MODE: 'coverage'
  artifacts:
    paths:
      - coverage

# Build

publish:
  stage: build
  script:
    - php -d phar.readonly=Off scripts/create_phar.php
  artifacts:
    paths:
      - scripts/rico-lib.phar

# Upload

upload:
  stage: upload
  image: curlimages/curl:latest
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file "scripts/rico-lib.phar" "${PACKAGE_REGISTRY_URL}rico-lib.phar"
  only:
    - tags
    - /^v?[0-9]+\.[0-9]+\.[0-9]+$/
  except:
    - branches

# Release

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli
  script:
    - release-cli create --name "$CI_COMMIT_TAG" --tag-name "$CI_COMMIT_TAG" --assets-link "{\"name\":\"rico-lib.phar\",\"url\":\"${PACKAGE_REGISTRY_URL}rico-lib.phar\"}"
  only:
    - tags
    - /^v?[0-9]+\.[0-9]+\.[0-9]+$/
  except:
    - branches

